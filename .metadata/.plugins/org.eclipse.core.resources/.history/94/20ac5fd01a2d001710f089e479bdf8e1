package presenter;

import java.security.cert.CertificateException;
import java.security.cert.X509Certificate;

import model.Group;
import model.User;
import model.UserSession;
import view.MenuWindow;

public class MenuPresenter implements MenuPresenterListener{
	
	private MenuWindow _menuWindow;
	private UserSession _session;
	
	
	public MenuPresenter(UserSession session) {
		super();
		
		_menuWindow = new MenuWindow(this);
		_session = session;
	}
	
	public void showWindow(){
		buildHeader();
		buildBody1();
		buildBody2();
		buildListings();
		_menuWindow.show();
	}
	
	private void buildListings() {
		X509Certificate certificate = null;
		User user = _session.get_user();
		try {
			certificate = user.getCertificate();
		} catch (CertificateException e) {
			e.printStackTrace();
		}
		
		String certificateText;
		certificateText = "Versão:" + certificate.getVersion() + "\n\n";
		certificateText += "Série:"+ certificate.getSerialNumber() + "\n\n";
		certificateText += "Validade:"+ certificate.getNotAfter().toString() + "\n\n";
		certificateText += "Tipo de assinatura:"+ certificate.getSigAlgName() + "\n\n";
		certificateText += "Emissor:"+ user.getIssuerName + "\n\n";
		certificateText += "Sujeito:"+ certificate.getSubjectX500Principal().g + "\n\n";
		_menuWindow._certificateJTextPane.setText(certificateText);
		
		//String privateKeyText = _session.get_user().get;
		//_menuWindow._privateKeyJTextPane.setText(privateKeyText);
	}

	public UserSession get_session() {
		return _session;
	}
	
	public void buildHeader(){
		String login = _session.get_user().get_loginName();
		String name = _session.get_user().getUserName();
		String group = _session.get_user().get_group().getGroupName();
		
		_menuWindow._loginLabel.setText(login);
		_menuWindow._nomeLabel.setText(name);
		_menuWindow._grupoLabel.setText(group);
	}
	
	public void buildBody1(){
		User user = _session.get_user();
		_menuWindow._queriesLabel.setText("" + user.getTotalQueries());
		_menuWindow._acessesLabel.setText("" + user.getTotalAcesses());
		_menuWindow._usersLabel.setText("" + user.getTotalUsers());
		_menuWindow._listingsLabel.setText("" + user.getTotalListings());
	}
	
	private void buildBody2() {
		Group group = _session.get_user().get_group();
		boolean hasPermissionToAdd = group == Group.Administrador ? true : false;
		
		_menuWindow._addUserMenuJButton.setVisible(hasPermissionToAdd);
		_menuWindow._addUserMenuJButton.setEnabled(hasPermissionToAdd);
	}

	@Override
	public void addButtonPressed() {
		ConfirmationPresenter confirmationPresenter = new ConfirmationPresenter(this);
		confirmationPresenter.showWindow();
	}

	@Override
	public void listButtonPressed() {
		User user = _session.get_user();
		user.incNQueries();	
		buildBody1();
	}

	@Override
	public void certificateListButtonPressed() {
		User user = _session.get_user();
		user.incNListings();
		buildBody1();
	}

}
