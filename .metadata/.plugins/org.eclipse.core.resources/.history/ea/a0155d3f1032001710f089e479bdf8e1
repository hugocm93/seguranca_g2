package model;

import java.sql.SQLException;
import java.sql.Statement;
import java.sql.Timestamp;
import java.util.ArrayList;

import database.MySQLConnection;

public class UserDAOBDImplementation implements UserDAO{
	
	private static UserDAOBDImplementation instance = null;
    public static UserDAOBDImplementation getInstance() {
       if(instance == null) {
          instance = new UserDAOBDImplementation();
       }
       return instance;
    }
    
    protected UserDAOBDImplementation(){
    	Statement stmt = null;
		try {
			stmt = MySQLConnection.getMySQLConnection().createStatement();
		} catch (SQLException e) {
			e.printStackTrace();
		}
	     
	      System.out.println(MySQLConnection.statusConnection());
	      
	      String sql = "CREATE TABLE USUARIOS (" +
	                   " id INTEGER not NULL, " +
	                   " certificate VARCHAR(255), " + 
	                   " salt VARCHAR(255), " + 
	                   " privateKeyBase64 VARCHAR(255), " + 
	                   " acesses INTEGER, " + 
	                   " users INTEGER, " + 
	                   " listings INTEGER, " + 
	                   " queries INTEGER, " + 
	                   " group INTEGER, " + 
	                   " allowAccessAfter TIMESTAMP, " + 
	                   " PRIMARY KEY ( id ))"; 
	      
	     private String _pemCertificate;
	  	private String _salt;
	  	private String _privateKeyBase64;
	  	private int _totalAcesses;
	  	private int _totalUsers;
	  	private int _totalListings;
	  	private int _totalQueries;
	  	private Group _group;
	  	private Timestamp _allowAccessAfter;
	  	private byte[] _passwordHash;
	      
	      
	      sql = "INSERT INTO HUGO (id, first, last, age)" + 
	    		"VALUES ('13', 'Hugo', 'Machado', '23')";
	
	      try {
			stmt.executeUpdate(sql);
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
    }

	@Override
	public boolean addUser(User user) {
		// TODO Auto-generated method stub
		return false;
	}

	@Override
	public ArrayList<User> getAllUsers() {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public boolean updateUser(User user) {
		// TODO Auto-generated method stub
		return false;
	}

	@Override
	public boolean deleteUser(User user) {
		// TODO Auto-generated method stub
		return false;
	}

	@Override
	public User getUserByLoginName(String loginName) {
		// TODO Auto-generated method stub
		return null;
	}

}
