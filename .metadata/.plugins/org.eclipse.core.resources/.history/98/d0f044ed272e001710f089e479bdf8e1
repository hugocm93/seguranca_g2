package presenter;

import java.security.cert.CertificateException;
import java.security.cert.X509Certificate;

import model.User;
import view.ConfirmationDialog;

public class ConfirmationPresenter implements ConfirmationPresenterListener{
	
	private ConfirmationDialog _dialog;
	private MenuPresenter _menu;

	public ConfirmationPresenter(MenuPresenter menu) {
		super();
		_menu = menu;
		
		_dialog = new ConfirmationDialog(this);
		initialize();
	}

	private void initialize() {
		X509Certificate certificate = null;
		User user = _menu.get_session().get_user();
		try {
			certificate = user.getCertificate();
		} catch (CertificateException e) {
			e.printStackTrace();
		}
		
		String certificateText;
		certificateText = "Versão: " + certificate.getVersion() + "\n\n";
		certificateText += "Série: "+ certificate.getSerialNumber() + "\n\n";
		certificateText += "Validade: "+ certificate.getNotAfter().toString() + "\n\n";
		certificateText += "Tipo de assinatura: "+ certificate.getSigAlgName() + "\n\n";
		certificateText += "Emissor: "+ user.getIssuer() + "\n\n";
		certificateText += "Sujeito: "+ user.getSubject() + "\n\n";
		_menuWindow._certificateArea.setText(certificateText);
		
		String privateKeyText = _session.get_user().getPrivateKeyBase64();
		_menuWindow._privateKeyArea.setText(privateKeyText);
		
	}

	@Override
	public void OkButtonPressed() {
		User admin = _menu.get_session().get_user();
		admin.incNUsers();
		_menu.buildBody1();
		_dialog.dispose();	
		
		_menu.resetWindow();
	}

	public void showWindow(){
		_dialog.setVisible(true);
	}

	@Override
	public void CancelButtonPressed() {
		_dialog.dispose();
	}

}
